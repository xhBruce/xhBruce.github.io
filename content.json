{"pages":[],"posts":[{"title":" bat获取所有的参数\t\t","text":"bat默认只能获取到1-9个参数，分别用%1 %2 ... %9引用，而%0表示运行的bat命令。如果传给bat的参数大于9个，可以用shift。 当然还可以使用 %\\* 来获取全部的参数。 SHIFT [/n] 如果命令扩展名被启用， SHIFT 命令支持/n 命令行开关；该命令行开关告诉命令从第 n 个参数开始移位； n 介于零和八之间。例如:SHIFT /2会将 %3 移位到 %2，将 %4 移位到 %3，等等；并且不影响 %0 和 %1。 @echo off set allparam= :param set str=%1 if &quot;%str%&quot;==&quot;&quot; ( goto end ) set allparam=%allparam% %str% shift /0 goto param :end if &quot;%allparam%&quot;==&quot;&quot; ( goto eof ) rem remove left right blank :intercept_left if &quot;%allparam:~0,1%&quot;==&quot; &quot; set &quot;allparam=%allparam:~1%&quot;&amp;goto intercept_left :intercept_right if &quot;%allparam:~-1%&quot;==&quot; &quot; set &quot;allparam=%allparam:~0,-1%&quot;&amp;goto intercept_right :eof echo %allparam% pause 参考文献：bat获取所有的参数","link":"/2018/12/17/bat-e8-8e-b7-e5-8f-96-e6-89-80-e6-9c-89-e7-9a-84-e5-8f-82-e6-95-b0/"},{"title":" chcp 修改显示格式\t\t","text":"CHCP 65001修改成 utf-8 , cmd重启不生效1 win键+R打开“运行”对话框，输入regedit打开注册表编辑器。2 找到 [HKEY_CURRENT_USER\\Console\\%SystemRoot%_system32_cmd.exe]3 修改”CodePage”=dword:000003a8（或者将进制改为十进制，然后输入936就可以了）【注】 2中可能不是%SystemRoot%_system32_cmd.exe名称；3中十六进制”000003a8″或十进制”936″，表示“936 (ANSI/OEM – 简体中文 GBK)” 写成bat文件执行utf-8.bat文件：@echo offCHCP 65001 GBK.bat文件：@echo offCHCP 65001 CMD中运行：路径\\utf-8.bat路径\\GBK.bat","link":"/2019/01/06/chcp-e4-bf-ae-e6-94-b9-e6-98-be-e7-a4-ba-e6-a0-bc-e5-bc-8f/"},{"title":" 【Google认证】STS：Android Security Test Suite\t\t","text":"STS Android Security Test Suite (STS). 是谷歌关于android安全补丁安装情况的一个测试套件 STS和security patch相关的，是CTS测试新增加一项安全测试套件。STS是201808才开始测试的。 Security patch日期在3个月内是GTS的一个case，如果不通过无法获得google认证。 在18年5月之前谷歌对于security patch这个属性都是在build库下面跟着aosp更新的。 现在需要通过STS之后由vendor来更新。 STS需要通过userdebug版本的targetfile来生成一个user版本的结果。 STS测试项 主要是测试 Android Security Patch 是否生效 测试说明 主要包含：那年那月的安全补丁、CVE安全补丁编号或Google与之对应的编号 android.security.sts.Pro【年_月】#testPro【CVE安全补丁编号】 android.security.sts.Poc17_07#testPocBug_33299365android.security.sts.Poc17_07#testPocBug_36604779 android.security.sts.Poc16_08#testPocCVE_2014_9904android.security.sts.Poc17_04#testPocCVE_2017_0583 check处理1、从Android每月安全补丁公告查找对应日期的对应CVE补丁patch，检查是否合入，一般是合入的 2、check没有合入，进行合入STS测试 3、check 合入没有生效，需要找芯片平台确认（如QCOM，一般CVE有对应的高通的CR号，提case咨询） 关注Security patch日期 Security patch日期在3个月内是GTS的一个case，如果不通过无法获得google认证。 例子 ：GtsOsTestCases–com.google.android.os.gts.SecurityPatchTest#testSecurityPatchDate 会有明确报错，需要更新日期：junit.framework.AssertionFailedError: ro.build.version.security_patch should be “2018-08” or later. Found “xxxx-xx-xx” Goolge最新通告，原定10.1开始STS要全部pass的规定；延迟期限未定！ Google官方说明请参考【“Security Test Suite (STS) Enforcement Schedule” announcement】 STS认证测试仍然参考之前方式送测： 【可以允许有fail】 【必须提供userdebug测试结果】","link":"/2018/11/12/e3-80-90google-e8-ae-a4-e8-af-81-e3-80-91sts-ef-bc-9aandroid-security-test-suite/"},{"title":" 世界，您好！\t\t","text":"欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！","link":"/2018/10/18/hello-world-1/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/03/28/hello-world/"},{"title":" ChkBugReport工具 for Android 1\t\t","text":"BugReport Android 的 BugReport 一般是 .txt 结尾的文本文件，也有可能是 .log。当然了，命名没有限定。不要慌实质是一样的，就全部当成 .txt获取BugReport文件：adb bugreport &gt; bugreport.txt ChkBugReport介绍关于这个工具，找到的资料都比较旧了，貌似是索尼移动的开发人员开发的，2014年左右的文章比较多，应该是那个时候索尼移动还是比较鼎盛的时期吧。现在已经很少看到关于这个工具的文章了，应该是工具比较稳定健壮了，不需要太大的修改量了。 官方网站：http://developer.sonymobile.com/knowledge-base/tools/analyse-your-bugreports-with-our-open-source-tool/ 开源地址：https://github.com/sonyxperiadev/ChkBugReport 官网是这样介绍的ChkBugReport is a new bugreport analysis tools released as open source . 下面一段翻译自这里：安卓的开发者们，你们还在为经常碰到的ANR而感到头疼和不爽么，还在为应用崩溃而抓耳挠腮么？还在因为收集到的错误日志杂乱无章而感到束手无策么？ChkBugReport将为你解忧愁，解心宽，解决各种小困难。ChkBugReport,简单易用，简直是居家旅行，工作生活必备之良品。 点击查看 ChkBugReport 源码。 点击查看 ChkBugReport.jar 下载地址。 点击 information 查看相关说明 。 ChkBugReport 开源工具ChkBugReport是一个开源工具，它可以把你得到的bugreprot解析成适合阅读的html文件。导出的html文件包含了根据bugreport数据得出的图表和分析结论。 它的源码中用到了以下开源类库： jQuery ，jsTree jQuery plugin ， tablednd jQuery plugin ， tablesorter jQuery plugin ，js-hotkeys， jquery-cookie 。学习输出报告文档型html可以参考源码。 目前ChkBugReport可以从bugreport数据中抽取出如下信息： Stacktraces ChkBugReport可以从bugreport中解析出输出bugreport的最后时刻、导致ANR时刻甚至更多时刻的堆栈信息。在例子中你可以看到进程的优先级和策略都已标示出来，堆栈中耗时的部分颜色是黑红，一些违反Strict Mode的部分（比如主线程中使用数据库）颜色标记为亮红。如果这个线程死锁，在报告的Errors将会出现。 Logs 这部分是对system、main和kernel日志的分析，在这里你可以看到每个进程内存使用图、那个程序产生的log最多、Activity的启动耗时、数据库操作耗时统计、对象被锁定时间、AIDL调用时间、Activity和Service的生命周期及其在内存中使用频率等等，详见 Packages ChkBugReport解析bugreport中存储的packages.xml并展示一系列的packages、user ids和 permissions。参见 Processes 操作app过程中产生的系统事件日志、内存使用信息等等，参见 Battery statistics 电池使用统计信息，参见 CPU Frequency statistics CPU频率统计信息，参见 Raw data 被分割成小段的原始数据 同时ChkBugReport也可以检测到（潜在的）错误，这些错误在输出的报告Errors部分中可以找到。你也可以在输出报告的stacktrace中找到死锁或一些违反Strict Mode的行为。 ChkBugReport使用github上 How to use it java -jar $HOME/chkbugreport.jar $HOME/bugreport.txt $HOME 是一个环境变量，chkbugreport.jar目录的路径。 ChkBugReport 会为你生成一个文件夹，叫做 bugreport_out，文件夹里有个 index.html 文件，这就是我们的错误报告的网页了，是一个 HTML 文件。 你可以双击启动它 （如果你设置了 .html 文件用浏览器程序启动的话）， 或者用命令行，比如我用 firefox 浏览器来启动这个 HTML 文件： firefox bugreport_out/index.html 命令参数Command-line-options For a complete list of parameters just run the tool without any arguments. As of now the following parameters are handled: -ds:file - Use file as dumsys output (almost same as -pb) -el:file - Use file as event log -ft:file - Use file as ftrace dump -ml:file - Use file as main log -mo:file - Parse monkey output and extract stacktraces from it -pb:file - Load partial bugreport (eg. output of dumpsys) -pk:file - Load packages.xml file -ps:file - Use file as “processes” section -pt:file - Use file as “processes and threads” section -sa:file - Use file as “vm traces at last anr” section -sl:file - Use file as system log -sn:file - Use file as “vm traces just now” section -sd:dir - Load files from directory as partial bugreports -uh:file - Load usage-history.xml file Extra options (less frequently needed): –browser - Launch the browser when done –gui - Launch the Graphical User Interface if no file name is provided –silent - Supress all output except fatal errors –limit - Limit the input file size (default) If using the -sl option for example, the log file will be truncated if it’s too long (since the generated html would be even bigger). This option (and –no-limit as well) must precede the other options in order to have effect. –no-limit - Don’t limit the input file size NOTE: The graphical user interface is still experimental and very rudimentary 快捷方式 shell脚本创建一个 chkbugreport 的 Shell 脚本，放在 $HOME/bin 目录中 ： vim $HOME/bin/chkbugreport 在脚本中加入以下代码： #!/bin/sh DIR=$HOME/bin JAR=$DIR/chkbugreport-0.4-185.jar CP=$JARif [ ! -f $JAR]; thenecho&quot;为了这个脚本能够运行，请把下载的 ChkBugReport 的 JAR 包拷贝到 $JAR 中&quot;exit 1 fi java -jar $CP&quot;$@&quot; 为脚本添加可执行权限： chmod +x $HOME/bin/chkbugreport 确保 $HOME/bin 这个目录在 Path 环境变量中，请参看 Linux探索之旅 | 第五部分第二课：一入Shell深似海，酷炫外壳惹人爱 。 之后，cmd中运行 chkbugreportbugreport.txt bat脚本创建一个 chkbugreport.bat 的 bat 脚本，把 chkbugreport.bat 的路径加到环境变量中。在脚本中加入以下代码： @echo off java -jar E:\\Android\\chkbugreport\\chkbugreport-0.4-185.jar %1 之后，cmd中运行 chkbugreport &quot;bugreport.txt&quot; chkbugreport 报错C:\\Users\\Administrator&gt;chkbugreport C:\\Users\\Administrator\\Desktop\\download@tid[]=4573872\\4573872_2018-11-19-064158-3908515\\bugreport_1542589813841.txtWTChkBugReport 0.5 (rev 216) !!BASE ON ChkBugReport!!Failed to load plugin: com.sonyericsson.chkbugreport.AdbExtensionFile C:\\Users\\Administrator\\Desktop\\download@tid[] does not exists!Cannot open file: C:\\Users\\Administrator\\Desktop\\download@tid[] 注意：Windows 上最好添加双引号 chkbugreport “… …\\bugreport.txt” 参考文献Android神兵利器 | ChkBugReport输出网页版错误报告ChkBugReport工具for Androidandroid 使用开源工具ChkBugReport分析Bugreport","link":"/2018/12/17/chkbugreport-e5-b7-a5-e5-85-b7-for-android-1/"},{"title":" ChkBugReport工具 for Android 2\t\t","text":"chkbugreport扩展功能Extending chkbugreport Java plugin：需要自己添加插件功能扩展 ExternalPlugin，并实现 initExternalPlugin 函数。麻烦，还需要 jar 文件~~~ XML Plugin：只需 xml 要按照特定格式配置就可，但是功能有局限性。 jar 文件或 xml 文件都需要放到特定文件夹目录下~/.chkbugreport 。这个一看是Linux下的，其实java获取的是”user.home”目录，在Windows上运行可以看到是 public static void main(String[] args) { //new Main().run(args); System.out.println(System.getProperty(“user.home”)); }运行结果：C:\\Users\\Administrator在 C:\\Users\\Administrator 创建.chkbugreport，直接是创建不成功的需要使用 “.chkbugreport.” 。XML Plugin 扩展功能—————可以使用xml文件格式的插件扩展/更改功能。### 运行 Plugin运行 Plugin 步骤（Module.java 中 runPlugins() 函数）： First, sort the plugins based on prio– 排序 Resetting and initializing data– 重置/初始化数据 Installing hooks– 安装hooks Then plugin should process the input data first– 处理Plugin输入的数据* Finally, each plugin should save the generated data–最后生成报告文件主要是最后三步的扩展功能。### 添加 XML plugin 插件代码添加 XML plugin 插件流程：BugReportModule.java -&gt; Module.java -&gt; loadExternalPlugins() -&gt; loadExternalXmlPlugin(File f) -&gt; addPlugin(new ExtXMLPlugin(xml))1、创建在 C:\\Users\\Administrator.chkbugreport 目录 2、添加 xml 文件example.xml： &lt;note text=&quot;Screen turning on&quot; error=&quot;true&quot; /&gt; &lt;/filter&gt; &lt;filter matchMsg=&quot;com.google.android.youtube&quot;&gt; &lt;!-- Add a yellow side-note to the log --&gt; &lt;note text=&quot;YouTube&quot; /&gt; &lt;/filter&gt; &lt;filter matchTag=&quot;ConnectivityService&quot; matchMsg=&quot;Ignoring protectedNetwork&quot;&gt; &lt;!-- Create a link from the &quot;Errors&quot; chapter --&gt; &lt;bug title=&quot;Something&apos;s fishy&quot; text=&quot;Lok at the log. Can you believe it?!&quot; prio=&quot;100&quot; type=&quot;phone err&quot; /&gt; &lt;/filter&gt; &lt;filter matchMsg=&quot;com.android.server.backup.BackupManagerService&quot;&gt; &lt;!-- Delete log lines --&gt; &lt;hide /&gt; &lt;/filter&gt; &lt;/hook&gt; &lt;hook into=&quot;EventLogPlugin&quot;&gt; &lt;filter matchMsg=&quot;games.provider.NotificationStubContentProvider&quot;&gt; &lt;!-- Add a red side-note to the log --&gt; &lt;!--note text=&quot;reboot&quot; error=&quot;true&quot; /--&gt; &lt;bug title=&quot;games.provider.NotificationStubContentProvider&quot; text=&quot;Lok at the log. Can you believe it?!&quot; prio=&quot;100&quot; type=&quot;phone err&quot; /&gt; &lt;/filter&gt; &lt;/hook&gt; &lt;generate&gt; &lt;chapter name=&quot;WTSpecialcharacters/Subchapter&quot;&gt; &lt;text&gt;WTSpecialcharacters/Subchapter&lt;/text&gt; &lt;log&gt; &lt;filter log=&quot;event&quot; matchTag=&quot;battery_level&quot; /&gt; &lt;filter log=&quot;system&quot; matchMsg=&quot;kill &quot; /&gt; &lt;filter log=&quot;main&quot; matchTag=&quot;PackageManager&quot; /&gt; &lt;/log&gt; &lt;/chapter&gt; &lt;/generate&gt; &lt;/plugin&gt; 3、cmd 中运行 chkbugreport …..\\bugreport_1542589813841.txt，查看报告……\\bugreport_1542589813841_out/index.html XML plugin 插件中xml文件标签详情&lt;plugin name=&quot;ExamplePlugin&quot;&gt; &lt;hook into=&quot;SystemLogPlugin&quot;&gt; ... &lt;/hook&gt; &lt;load&gt; ... &lt;/load&gt; &lt;generate&gt; &lt;chapter name=&quot;WTSpecialcharacters/Subchapter&quot;&gt; ... &lt;/chapter&gt; &lt;/generate&gt; &lt;/plugin&gt; 官方文档Xml plugins hookhook用于修改已存在插件的行为。依赖于目标插件，也就是源码中定义的 plugin。从github wiki上看并不是支持全部的plugin，仅仅只有BatteryInfoPlugin、SystemLogPlugin、MainLogPlugin 和 EventLogPlugin。 ●BatteryInfoPlugin扩展，支持在电池图表中添加额外的信息。但是在生成的HTML报告中并没有发现有变化，可能 plugin 本身功能齐全。BatteryInfoPlugin 有单独的 hooks.java 文件。 &lt;hook into=&quot;BatteryInfoPlugin&quot;&gt; &lt;logchart&gt; &lt;dataset id=&quot;batt&quot; name=&quot;Battery&quot; type=&quot;state&quot; colors=&quot;#fc8,#00f,#0f0,#f00&quot; /&gt; &lt;filter log=&quot;event&quot; matchTag=&quot;battery_status&quot; matchMsg=&quot;..*,.*,.*,(.*),.*\\]&quot; dataset=&quot;batt&quot; /&gt; &lt;/logchart&gt; &lt;/hook&gt; ● SystemLogPlugin, MainLogPlugin and EventLogPlugin 这三个都继承 LogPlugin.java。 &lt;hook into=&quot;SystemLogPlugin&quot;&gt; &lt;filter matchTag=&quot;WindowManager&quot; matchMsg=&quot;Screen turning on&quot;&gt; &lt;!-- Add a red side-note to the log --&gt; &lt;note text=&quot;Screen turning on&quot; error=&quot;true&quot; /&gt; &lt;/filter&gt; &lt;filter matchMsg=&quot;com.google.android.youtube&quot;&gt; &lt;!-- Add a yellow side-note to the log --&gt; &lt;note text=&quot;YouTube&quot; /&gt; &lt;/filter&gt; &lt;filter matchTag=&quot;ConnectivityService&quot; matchMsg=&quot;Ignoring protectedNetwork&quot;&gt; &lt;!-- Create a link from the &quot;Errors&quot; chapter --&gt; &lt;bug title=&quot;Something&apos;s fishy&quot; text=&quot;Lok at the log. Can you believe it?!&quot; prio=&quot;100&quot; type=&quot;phone err&quot; /&gt; &lt;/filter&gt; &lt;filter matchMsg=&quot;com.android.server.backup.BackupManagerService&quot;&gt; &lt;!-- Delete log lines --&gt; &lt;hide /&gt; &lt;/filter&gt; &lt;/hook&gt; hook子标签： 1、filter关注标签matchTag、matchMsg。matchTag 对应Android Log中的TAG；matchMsg 对应Android Log中的msg。根据这两个标签过滤。 2、子标签note 、bug 、hide 对 SystemLogPlugin 扩展，即对HTML报告中 system log/log 处理。note 是添加右侧报告的左侧提示 tag，如 “YouTube” 提示；bug 是对 system log/log 过滤 log，并生成到到HTML报告 Errors/ 中；hide 是对 system log/log 过滤 log 隐藏，不可见。 Load目前没有使用。github官方：The “load” tag is used only to collect data. Currently it’s not used. In the future it will be used to create tables in the databases and populate it from the log or from other data source. Generate&lt;generate&gt; &lt;chapter name=&quot;WTSpecialcharacters/Subchapter&quot;&gt; &lt;text&gt;WTSpecialcharacters/Subchapter&lt;/text&gt; &lt;log&gt; &lt;filter log=&quot;event&quot; matchTag=&quot;battery_level&quot; /&gt; &lt;!-- filter log=&quot;event&quot; matchTag=&quot;screen_toggled&quot; / --&gt; &lt;filter log=&quot;system&quot; matchMsg=&quot;kill &quot; /&gt; &lt;filter log=&quot;main&quot; matchTag=&quot;PackageManager&quot; /&gt; &lt;/log&gt; &lt;/chapter&gt; &lt;/generate&gt; 在HTML报告左侧目录中添加目录章节。 generate子标签： chapter 根据该标签 name 生成目录 text 生成的目录下的报告中，提示语句。 log 生成的目录下生成 log 报告。从代码中查看仅仅支持even、system、main，即HTML报告中 Even log/Log、System log/Log、Main log/Log 过滤 chkbugreport 对 Kernel log 、Last kmsg 支持在HTML报告中只是抓取 bugreport.txt 中 KERNEL LOG、LAST KMSG 的 log。 对应源码 KernelLogPlugin， 相较于 SystemLogPlugin MainLogPlugin EventLogPlugin （即 LogPlugin）没有实现覆盖父类的 public void onHook(Module mod, XMLNode hook) ，可能由于此，不能支持 hook扩展； 由于 com.sonyericsson.chkbugreport.plugins.extxml.Log.java 中对 generate/chapter/log/filter 标签下的 log 过滤，kernellog 不能支持 generate扩展。 目前xml扩展功能并不能支持kernellog 待续。。。。。。能否扩展到kernellog上","link":"/2019/01/06/chkbugreport-e5-b7-a5-e5-85-b7-for-android-2/"},{"title":" wordpress个人博客（阿里服务器）\t\t","text":"可查看：杂谈搭建个人博客选择比较一下个人博客选择 CSDN上https://blog.csdn.net/qq_23452385/article/details/83120255 1、购买域名和服务器可参考购买域名和服务器 https://yq.aliyun.com/articles/37204 https://blog.csdn.net/m0_37438418/article/details/79129420 2、下载FileZilla客户端和Wordpress压缩包 FileZilla是一个免费开源的FTP软件，分为客户端版本和服务器版本，具备所有的FTP软件功能。 Wordpress官方文档： https://codex.wordpress.org/zh-cn:Main_Page 1》使用FileZilla上传wordpress压缩包到服务器/htdocs目录下，在使用“主机管理平台”解压 1》使用FileZilla上传wordpress压缩包中wordpress/文件到服务器/htdocs目录下 注：wordpress压缩包中wordpress/在/htdocs站点根目录下，不包含wordpress目录 3、数据库验证避免WordPress报“建立数据库连接时出错”，验证数据库。 登陆阿里云，找到左侧“云虚拟主机”，全部主机-&gt;对应主机“操作”项选管理 跳转到“主机管理平台”，查看数据库信息，点击“管理”登陆到登陆到数据库DMS 修改wp-config.php wp-config.php 一开始是不存在于 WordPress 中的，您需要自己创建。请参照 wp-config-sample.php 文件样本来进行创建。 要对 wp-config.php 文件做修改，您需要如下信息： 参考https://codex.wordpress.org/zh-cn:%E7%BC%96%E8%BE%91wp-config.php 4、著名的WordPress五分钟安装程序 登陆到登陆到数据库DMS，查看数据 5、登陆个人网址http://xhbruce.cn 不要http://xhbruce.cn/wp-login.php不要后缀/wp-login.php这个没有登陆页面","link":"/2018/10/18/wordpress-e4-b8-aa-e4-ba-ba-e5-8d-9a-e5-ae-a2-ef-bc-88-e9-98-bf-e9-87-8c-e6-9c-8d-e5-8a-a1-e5-99-a8-ef-bc-89/"}],"tags":[{"name":"bat","slug":"bat","link":"/tags/bat/"},{"name":"STS","slug":"STS","link":"/tags/STS/"},{"name":"ChkBugReport","slug":"ChkBugReport","link":"/tags/ChkBugReport/"},{"name":"个人网站","slug":"个人网站","link":"/tags/个人网站/"}],"categories":[{"name":"bat","slug":"bat","link":"/categories/bat/"},{"name":"CTS","slug":"CTS","link":"/categories/CTS/"},{"name":"wordpress相关","slug":"wordpress相关","link":"/categories/wordpress相关/"},{"name":"ChkBugReport","slug":"ChkBugReport","link":"/categories/ChkBugReport/"},{"name":"个人网站","slug":"个人网站","link":"/categories/个人网站/"}]}